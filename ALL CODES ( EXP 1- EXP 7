# print("Hello Everyone")
# print("Hello\nWorld")
# print("Hello\n     World")
# print("'Rohit's date of birth is 12\\05\\1999")


# x="Hello"
# print(x)

# int_ok = 66
# print("integer:", int_ok)
# float_ok = 3.14
# print("float:", float_ok)
# string_ok = "Helloworld"
# print("string:", string_ok)
# bool_ok = True
# print("boolean:", bool_ok)
# list_ok = [1, 2, "three", True]
# print("list:", list_ok)
# tuple_ok = (1, 2, "three", True)
# print("tuple:", tuple_ok)
# dict_ok = {"name": "xyz", "age": 18, "is_student": True}
# print("dictionary:", dict_ok )



# a="Ishaan"
# b="Narayan"
# print("Name: ",a+b)


# x="Ishaan"
# y="Narayan"
# z="Ani"
# print("Name:",x,"(",z,")",y)

# a="Ishaan Narayan"
# b="500104976"
# c="24 Sept 2004"
# d="Upes\n\tBidholi Champus\n\tPincode:248007"
# e="AI & Ml"
# f="2"
# print("NAME:",a)
# print("SAPID:",b)
# print("DATE OF BIRTH:",c)
# print("ADDRESS:",d)
# print("Programme:",e)
# print("Semester:",f)

# x=9
# y=7
# print("Adddition:",x+y)
# print("Subtraction:",x-y)
# print("Multiplication:",x*y)
# print("Division:",x/y)


# r=int(input("Enter the radius of the circle:"))
# print("Area of circle is :",3.14*r*r)


# x=4
# y=3
# print("Output:",(x+y)*(x+y))


# P=int(input("Enter length of PERPENDICULAR:"))
# B=int(input("Enter length of BASE:"))
# H=pow(pow(P,2)+pow(B,2),0.5)
# print("Hypotenuse:",H)
#

# P=int(input("Principle:"))
# R=int(input("Rate:"))
# T=int(input("Time:"))
# print("Simple Interest:",(P*R*T)/100)




# SIDE_A = float(input("Enter the length of side a: "))
# SIDE_B = float(input("Enter the length of side b: "))
# SIDE_C = float(input("Enter the length of side c: "))
# s = (SIDE_A + SIDE_B + SIDE_C) / 2
# area_TRIANGLE = (s * (s - SIDE_A) * (s - SIDE_B) * (s - SIDE_C))**0.5
# print("The area of the triangle is", area_TRIANGLE)


# total_seconds = int(input("Enter the number of seconds: "))
# hours = total_seconds // 3600
# minutes = (total_seconds % 3600) // 60
# seconds = total_seconds % 60
# print("Hours:",hours)
# print("Minutes:",minutes)
# print("Seconds:",seconds)
#

# abc=int(input("enter a"))
# bcd=int(input("enter b"))
# print("Before swapping:","a=",abc,"\n\t\t b=",bcd)
# abc=abc+bcd
# bcd=abc-bcd
# abc=abc-bcd
# print("After swapping:","a=",abc,"\n\t\tb=",bcd)


# n=int(input("Enter a number:"))
# sum=0
# for i in range(n+1):
#     sum=sum+i
# print(f"Sum of {n} natural numbers is {sum}")


# a=1
# b=0
# print("Truth table for & is:")
# print(f"{a} & {a}: {a&a}")
# print(f"{a} & {b}: {a&b}")
# print(f"{b} & {a}: {b&a}")
# print(f"{b} & {b}: {b&b}")
#
# print("Truth table for ^ is:")
# print(f"{a} ^ {a}: {a^a}")
# print(f"{a} ^ {b}: {a^b}")
# print(f"{b} ^ {a}: {b^a}")
# print(f"{b} ^ {b}: {b^b}")
#
# print("Truth table for | is:")
# print(f"{a} | {a}: {a|a}")
# print(f"{a} | {b}: {a|b}")
# print(f"{b} | {a}: {b|a}")
# print(f"{b} | {b}: {b|b}")

#
# abc=int(input("enter a number"))
# bcd=int(input("enter the number of left and right shift"))
# print(f"right shift by {bcd} of {abc} is {abc>>bcd}")
# print(f"left shift by {bcd} of {abc} is {abc<<bcd}")

# a=(10,20,56,78,89)
# b=int(input("Enter a number:"))
# if b in a:
#     print("number is there")
# else:
#     print("number is not there")
#

#
# str=input("enter a string")
# char=input("Enter a character:")
# if char in str:
#     print("present")
# else:
#     print("absent")


# a=int(input("Enter a number:"))
# if (a%3==0) and (a%5==0):
#     print(a,"Divisible by both 3 and 5")
# else:
#     print("Not divisible")

#
# a=int(input("Enter a number"))
# if a%5==0:
#     print(a,"is a multiple of 5")
# else:
#     print(a,"is not a multiple of 5")

# a=int(input("Enter a number "))
# b=int(input("Enter another number "))
# if a>b:
#     print(a,"is greater")
# elif a<b:
#     print(b,"is greater")
# else:
#     print("numbers are equal")

#
# a=int(input("Enter first number "))
# b=int(input("Enter second number "))
# c=int(input("Enter third number "))
# if a>b and a>c:
#     print(a,"is greatest")
# elif b>a and b>c:
#     print(b,"is greatest")
# else:
#     print(c,"is greatest")


# import math
#
# a = 1
# b = 4
# c = 4
#
# # calculate discriminant
# delta = b**2 - 4*a*c
#
# # check if roots are real or imaginary
# if delta >= 0:
#     # calculate real roots
#     root1 = (-b + math.sqrt(delta)) / (2*a)
#     root2 = (-b - math.sqrt(delta)) / (2*a)
#     print("The quadratic equation has real roots:")
#     print("Root 1:", root1)
#     print("Root 2:", root2)
# else:
#     # calculate imaginary roots
#     real_part = -b / (2*a)
#     imag_part = math.sqrt(abs(delta)) / (2*a)
#     print("The quadratic equation has imaginary roots:")
#     print("Root 1:", str(real_part) + " + " + str(imag_part) + "i")
#     print("Root 2:", str(real_part) + " - " + str(imag_part) + "i")
#

# y = int(input("Enter a year: "))
# if y % 4 == 0 and (y % 100 != 0 or y % 400 == 0):
#     print("Leap year")
# else:
#     print("Not leap year")


# day = int(input("Enter the day: "))/
# month = int(input("Enter the month: "))
# year = int(input("Enter the year: "))
# if month == 2:
#     if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):
#         days_in_month = 29
#     else:
#         days_in_month = 28
# elif month in [4, 6, 9, 11]:
#     days_in_month = 30
# else:
#     days_in_month = 31
# if day < days_in_month:
#     next_day = day + 1
#     next_month = month
#     next_year = year
# else:
#     next_day = 1
#     if month < 12:
#         next_month = month + 1
#         next_year = year
#     else:
#         next_month = 1
#         next_year = year + 1
# print(f"Next date: day={next_day} month={next_month} year={next_year}")


# m1=int(input("Enter marks for subject 1:"))
# m2=int(input("Enter marks for subject 2:"))
# m3=int(input("Enter marks for subject 3:"))
# m4=int(input("Enter marks for subject 4:"))
# m5=int(input("Enter marks for subject 5:"))
# percent=(m1+m2+m3+m4+m5)/5
# cgpa=percent/10
# a="ishaan narayan"
# b="R2142220086"
# c=500104976
# d=3
# e="B.tech CSE AI & ML"
#
# print("Name=",a)
# print("Roll Number:",b,"\t SAPID:",c)
# print("Sem:",d,"\t\t\t\t Course:",e)
# print("Subject Name:\t Marks")
# print("PDS:\t\t",m1)
# print("Python:\t\t",m2)
# print("Chemistry:\t",m3)
# print("English:\t",m4)
# print("Physics:\t",m5)
# print("Percentage:\t",percent,"%")
# print("CGPA:",cgpa)
# if cgpa>=0 and cgpa<3.5:
#     print("Grade: F")
# elif cgpa>=3.5 and cgpa<5.1:
#     print("Grade: C+")
# elif cgpa>=5.1 and cgpa<6.1:
#     print("Grade: B")
# elif cgpa>=6.1 and cgpa<7.1:
#     print("Grade: B+")
# elif cgpa>=7.1 and cgpa<8.1:
#     print("Grade: A")
# elif cgpa>=8.1 and cgpa<9.1:
#     print("Grade: A+")
# elif cgpa>=9.2 and cgpa<10.1:
#     print("Grade: O")


# a=int(input("Enter a number "))
# b=1
# if a>0:
#     for i in range(1,a+1):
#         b=b*i
#     print(b,"is factorial of",a)
# else:
#     print("enter positive number")

# number = int(input("Enter a number: "))
# n = len(str(number))
# sum_of_cubes = 0
# temp = number
# while temp > 0:
#     digit = temp % 10
#     sum_of_cubes += digit ** n
#     temp //= 10
# if number == sum_of_cubes:
#     print(f"{number} is an Armstrong number.")
# else:
#     print(f"{number} is not an Armstrong number.")


# n = int(input("Enter the number of terms: "))
# a, b = 0, 1
# for i in range(n):
#     print(a, end=" ")
#     a, b = b, a + b


# num = int(input("Enter a number: "))
# if num > 1:
#     for i in range(2, num):
#         if (num % i) == 0:
#             print(num, "is not a prime number")
#             break
#     else:
#         print(num, "is a prime number")
# else:
#     print(num, "is not a prime number")


# num = int(input("Enter a number: "))
#
# num_str = str(num)
# num_str_rev = num_str[::-1]
# if num_str == num_str_rev:
#     print(num, "is a palindrome number")
# else:
#     print(num, "is not a palindrome number")


# number = int(input("Enter a number: "))
# sum = 0
# while number > 0:
#     digit = number % 10
#     sum += digit
#     number //= 10
# print("Sum of digits:", sum)

#
# count = 0
# for i in range(1, 101):
#     if i % 5 == 0 or i % 7 == 0:
#         print(i)
#         count += 1
#
# print("Total count:", count)



# string = input("Enter a string: ")
# upper_string = string.upper()
# print("String in upper case:", upper_string)


# for num in range(1, 101):
#     if num > 1:
#         for i in range(2, num):
#             if (num % i) == 0:
#                 break
#         else:
#             print(num)


# number = int(input("Enter a number: "))
# for i in range(1, 11):
#     print(f"{number} * {i} = {number * i}")


#
# str=input("enter string")
# sum=0
# for i in str:
#     if (i.isupper()):
#         sum=sum+1
# print("The no of capital letters are: ",sum)

#
# str=input("Enter a string: ")
# sum=0
# for i in str:
#     if i in "aeiouAEIOU":
#         sum=sum+1
# print("Total number of vowels are: ",sum)



#ishaan narayan
#500104976
# str=input("Enter a string")
# w=str.split()
# for word in w:
#     print(word)


# string=input("Enter a string: ")
# sum=0
# sub_str=input("Enter a sub string: ")
# for i in range(len(string)):
#     if string[i:i+len(sub_str)]==sub_str:
#         sum=sum+1
# print(sum)




# s=input("Enter a string")
# dic={}
# for char in s:
#     if char.isalpha():
#         char=char.upper()
#         if char in dic:
#             dic[char]=dic[char]+1
#         else:
#             dic[char]=1
# for char,count in dic.items():
#     print(f"{count}{char}")


# sentence = input("Enter a sentence: ")
# words = sentence.split()
# unique_words = set(words)
# count = len(unique_words)
# print(f"There are {count} unique words in the sentence.")



# n = int(input("Enter the number of fruits in each set: "))
# s1 = set(input(f"Enter {n} fruits for set 1, separated by spaces: ").split())
# s2 = set(input(f"Enter {n} fruits for set 2, separated by spaces: ").split())
#
# common_fruits = s1 & s2
# unique_to_s1 = s1 - s2
# count = len(s1.union(s2))
#
# print(f"Fruits in both sets: {common_fruits}")
# print(f"Fruits only in s1: {unique_to_s1}")
# print(f"Count of all fruits: {count}")


# S1 = {'Red', 'yellow', 'orange', 'blue'}
# S2 = {'violet', 'blue', 'purple'}
# print("S1 union S2:", S1.union(S2))
# print("S1 intersection S2:", S1.intersection(S2))
# print("S1 difference S2:", S1.difference(S2))
# print("S2 difference S1:", S2.difference(S1))
# print("S1 symmetric differenceS2:",S1.symmetric_difference(S2))



# n = int(input("Enter the number of values you want to scan: "))
# counts = [0, 0, 0, 0]
#
# for i in range(n):
#     value = int(input("Enter a value between 0 and 3: "))
#     counts[value] += 1
#
# print("Number of times each value has occurred:")
# for i in range(4):
#     print(i, ":", counts[i])


# n = int(input("Enter the number of values: "))
# values = []
# for i in range(n):
#     value = float(input("Enter a value: "))
#     values.append(value)
#
# my_tuple = tuple(values)
#
# sum_of_values = sum(my_tuple)
#
# num_of_values = len(my_tuple)
#
# average = sum_of_values / num_of_values
#
# print("The average of all values is:", average)



# n = int(input("Enter the number of persons: "))
# person_dict = {}
# for i in range(n):
#  name = input(f"Enter name of person {i+1}: ")
#  city = input(f"Enter city of person {i+1}: ")
#  person_dict[name] = city
# print("All names:")
# for name in person_dict.keys():
#  print(name)
# print("All city names:")
# for city in person_dict.values():
#  print(city)
# print("Name and city of all persons:")
# for name, city in person_dict.items():
#  print(f"{name}: {city}")
# city_count = {}
# for city in person_dict.values():
#  if city in city_count:
#      city_count[city] += 1
#  else:
#      city_count[city] = 1
# print("Number of persons in each city:")
# for city, count in city_count.items():
#  print(f"{city}: {count}")

#
# movies = {}
# num_of_movies = int(input("Enter the number of movies: "))
#
# for i in range(num_of_movies):
#     movie_name = input("Enter the name of the movie: ")
#     release_year = int(input("Enter the year of release: "))
#     director_name = input("Enter the name of the director: ")
#     production_cost = float(input("Enter the production cost of the movie: "))
#     collection = float(input("Enter the collection made by the movie: "))
#
#     movies[movie_name] = {"Year": release_year, "Director": director_name, "Production Cost": production_cost,
#                           "Collection": collection}

# print("Movie details:")
# for movie, details in movies.items():
#     print(movie, details)
#
# print("\nMovies released before 2015:")
# for movie, details in movies.items():
#     if details["Year"] < 2015:
#         print(movie)
#
# print("\nMovies that made a profit:")
# for movie, details in movies.items():
#     if details["Collection"] > details["Production Cost"]:
#         print(movie)
#
# director_name = input("\nEnter the name of the director to search for: ")
# print(f"\nMovies directed by {director_name}:")
# for movie, details in movies.items():
#     if details["Director"] == director_name:
#         print(movie)


# def find_max_min():
#     numbers = []
#     num_of_nums = int(input("Enter the number of numbers: "))
#     for i in range(num_of_nums):
#         num = int(input(f"Enter number {i+1}: "))
#         numbers.append(num)
#     max_num = numbers[0]
#     min_num = numbers[0]
#     for num in numbers:
#         if num > max_num:
#             max_num = num
#         if num < min_num:
#             min_num = num
#     return max_num, min_num
# max_num, min_num = find_max_min()
# print("Maximum number:", max_num)
# print("Minimum number:", min_num)


# def sum_cubes(n):
#     sum = 0
#     for i in range(1, n):
#         sum += i**3
#     return sum
# num=int(input('enter the number'))
# print(sum_cubes(num))



# def print_nums(n):
#     if n > 1:
#         print_nums(n-1)
#     print(n)
# print_nums(8)


# def fib(n):
#     if n==1:
#         return 0
#     elif n==2:
#         return 1
#     else:
#         return fib(n-1)+fib(n-2)
# n = int(input("Enter the number of terms: "))
# for i in range(1,n+1):
#     print(fib(i))

#
# cone_volume = lambda h, r: (1/3) * 3.14159 * r**2 * h
#
# h=float(input("enter height"))
# r=float(input("enter radius"))
# print(cone_volume(h,r))



##Ishaan narayan
#500104976

# l1 = [10, 6, 8, 90, 12, 56]
# max_min = lambda l1: (max(l1), min(l1))
# print(max_min(l1))

# def print_name(first_name, last_name):
#     print(f"First Name: {first_name}")
#     print(f"Last Name: {last_name}")
# 
# print_name(last_name="NARAYAN", first_name="ISHAAN")
# 
# #default argument
# def hello(name="World"):
#     print(f"Hello {name}")
# 
# hello()
# hello("ishaan")
# #variable length argument
# def addition(*arguments):
#     sum = 0
#     for num in arguments:
#         sum += num
#     return sum
# 
# print(addition(1, 2, 3))
